rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isSelf(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isValidUser() {
      return isSignedIn() && request.auth.token.email_verified == true;
    }

    function isValidImageFile() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }

    // Public game assets (covers, screenshots)
    match /public/games/{gameId}/{fileName} {
      allow read: if true; // Public read access
      allow write: if isValidUser() && isValidImageFile();
    }

    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if true; // Profile images are publicly readable
      allow write: if isSelf(userId) && isValidUser() && isValidImageFile();
      allow delete: if isSelf(userId) && isValidUser();
    }

    // User-uploaded game covers (when no official cover exists)
    match /users/{userId}/games/{gameId}/{fileName} {
      allow read: if true; // User-uploaded covers are publicly readable
      allow write: if isSelf(userId) && isValidUser() && isValidImageFile();
      allow delete: if isSelf(userId) && isValidUser();
    }

    // Private user files (receipts, personal notes, etc.)
    match /private/{userId}/{allPaths=**} {
      allow read, write: if isSelf(userId) && isValidUser();
      allow delete: if isSelf(userId) && isValidUser();
    }

    // Admin/moderation files
    match /admin/{allPaths=**} {
      allow read, write: if isSignedIn() && 
                            request.auth.token.admin == true;
    }

    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}